

sectionsprovider
	sheme:

	section.
		id: <string>,		// section name 
		path: <string>,		// ancestor path "one,two,three," 		
 
	
	logic: 

	      add node:
			var ancestorpath = db.categoriesMP.findOne({_id:'Electronics'}).path;
			ancestorpath += 'Electronics,'
			db.categoriesMP.insert({_id:'LG', path:ancestorpath});
			//{ "_id" : "LG", "path" : "Electronics," } 
			
	       update/move node:
	       		ancestorpath = db.categoriesMP.findOne({_id:'Cell_Phones_and_Smartphones'}).path;
			ancestorpath +='Cell_Phones_and_Smartphones,'
			db.categoriesMP.update({_id:'LG'},{$set:{path:ancestorpath}});
			//{ "_id" : "LG", "path" : "Electronics,Cell_Phones_and_Accessories,Cell_Phones_and_Smartphones," } 
			
		remove:
			db.categoriesMP.remove({_id:'LG'}); 
		
		get children unordered
		    	db.categoriesMP.find({$query:{path:'Electronics,'}})
			//{ "_id" : "Cameras_and_Photography", "path" : "Electronics," }
			//{ "_id" : "Shop_Top_Products", "path" : "Electronics," }
			//{ "_id" : "Cell_Phones_and_Accessories", "path" : "Electronics," }  
		
		get all node descendants
		    	var descendants=[]
			var item = db.categoriesMP.findOne({_id:"Cell_Phones_and_Accessories"});
			var criteria = '^'+item.path+item._id+',';
			var children = db.categoriesMP.find({path: { $regex: criteria, $options: 'i' }});
			while(true === children.hasNext()) {
			  var child = children.next();
			    descendants.push(child._id);
			}

			descendants.join(",")
			//Cell_Phones_and_Smartphones,Headsets,Batteries,Cables_And_Adapters,Nokia,Samsung,Apple,HTC,Vyacheslav 
		
		get path to node
		    	 var path=[]
			 var item = db.categoriesMP.findOne({_id:"Nokia"})
			 print (item.path)
			 //Electronics,Cell_Phones_and_Accessories,Cell_Phones_and_Smartphones, 
			 
		indexes
			db.categoriesAAO.ensureIndex( { path: 1 } ) 
